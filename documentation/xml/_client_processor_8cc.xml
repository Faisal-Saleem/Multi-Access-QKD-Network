<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_client_processor_8cc" kind="file" language="C++">
    <compoundname>ClientProcessor.cc</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">omnetpp.h</includes>
    <includes local="no">bitset</includes>
    <includes local="no">iostream</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">random</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes refid="_client_processor_8h" local="yes">ClientProcessor.h</includes>
    <includes refid="_client_memory_8h" local="yes">ClientMemory.h</includes>
    <incdepgraph>
      <node id="10">
        <label>ClientProcessor.h</label>
        <link refid="_client_processor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ClientProcessor.cc</label>
        <link refid="_client_processor_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>ClientMemory.h</label>
        <link refid="_client_memory_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>random</label>
      </node>
      <node id="2">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>bitset</label>
      </node>
      <node id="12">
        <label>MacTableEntry_m.h</label>
        <link refid="_mac_table_entry__m_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="13">
        <label>QuantumKeyEntry_m.h</label>
        <link refid="_quantum_key_entry__m_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>omnetpp.h</label>
      </node>
      <node id="6">
        <label>cstdlib</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_client_processor_8cc_1a79d5c3067326a0cfc360ba4ab50c19a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Define_Module</definition>
        <argsstring>(ClientProcessor)</argsstring>
        <name>Define_Module</name>
        <param>
          <type><ref refid="class_client_processor" kindref="compound">ClientProcessor</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ClientProcessor.cc" line="24" column="1" declfile="ClientProcessor.cc" declline="24" declcolumn="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>ClientProcessor.cc</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>7<sp/>Apr<sp/>2019</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>Faisal</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omnetpp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;bitset&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_client_processor_8h" kindref="compound">ClientProcessor.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_client_memory_8h" kindref="compound">ClientMemory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceomnetpp" kindref="compound">omnetpp</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="_client_processor_8cc_1a79d5c3067326a0cfc360ba4ab50c19a2" kindref="member">Define_Module</ref>(<ref refid="class_client_processor" kindref="compound">ClientProcessor</ref>);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_client_processor_1a2e6abfaba0d005ce4d591a639e501286" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_client_processor_1a2e6abfaba0d005ce4d591a639e501286" kindref="member">ClientProcessor::initialize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stage)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>cModule<sp/>*targetModule<sp/>=<sp/>this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientMemory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_client_memory" kindref="compound">ClientMemory</ref><sp/>*clientMemory<sp/>=<sp/>check_and_cast&lt;ClientMemory<sp/>*&gt;(targetModule);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mac_table_entry" kindref="compound">MacTableEntry</ref><sp/>*macTableEntry<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_mac_table_entry" kindref="compound">MacTableEntry</ref>();</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macTableEntry-&gt;<ref refid="class_mac_table_entry_1a6465962d98b26ca79e52833a856f25ee" kindref="member">setIdentity</ref>(1);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macTableEntry-&gt;<ref refid="class_mac_table_entry_1a2b0fa1e2d3c836b045ff47f8743b4569" kindref="member">setInterface</ref>(this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;getName());</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macTableEntry-&gt;<ref refid="class_mac_table_entry_1a150ec0b4aa63ef6786ada551a24d4007" kindref="member">setMacAddress</ref>(this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macTableEntry-&gt;<ref refid="class_mac_table_entry_1af6a2aa74138f4f626a49b47637c0c280" kindref="member">setQuantumInterfaceId</ref>(this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientQuantumInterface&quot;</highlight><highlight class="normal">)-&gt;getName());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>macTableEntry-&gt;<ref refid="class_mac_table_entry_1a91122e0bff94f565be6a4510e4bf1734" kindref="member">setType</ref>(0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientMemory-&gt;<ref refid="class_client_memory_1a7145e41efcf8f46c16205952f54d2ecc" kindref="member">addMacTableEntry</ref>(macTableEntry);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_client_processor_1a8ffe1d1f59d3848a2f34cfdf51f0d4be" kindref="member">ClientProcessor::printMacTable</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cPacket<sp/>*discoveryPacket<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cPacket(</highlight><highlight class="stringliteral">&quot;networkDiscovery&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).setStringValue(</highlight><highlight class="stringliteral">&quot;networkDiscovery&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;ipAddress&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;ipAddress&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendDelayed(discoveryPacket,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;publicInterfaceCommunication$o&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(stage<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">),<sp/>this-&gt;getParentModule()-&gt;getName())<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;multipoint&quot;</highlight><highlight class="normal">).boolValue()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cPacket<sp/>*discoveryPacket<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cPacket(</highlight><highlight class="stringliteral">&quot;initQkd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).setStringValue(</highlight><highlight class="stringliteral">&quot;initQkd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;srcMAC&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getParentModule()-&gt;getSubmodule(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">).stringValue())-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;desMAC&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getParentModule()-&gt;getSubmodule(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;destination&quot;</highlight><highlight class="normal">).stringValue())-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendDelayed(discoveryPacket,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;publicInterfaceCommunication$o&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;multipoint&quot;</highlight><highlight class="normal">).boolValue()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">),<sp/>this-&gt;getParentModule()-&gt;getName())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cPacket<sp/>*discoveryPacket<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cPacket(</highlight><highlight class="stringliteral">&quot;initQkd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).setStringValue(</highlight><highlight class="stringliteral">&quot;initQkd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;srcMAC&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getParentModule()-&gt;getSubmodule(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;source&quot;</highlight><highlight class="normal">).stringValue())-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket-&gt;addPar(</highlight><highlight class="stringliteral">&quot;desMAC&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getParentModule()-&gt;getSubmodule(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;destination&quot;</highlight><highlight class="normal">).stringValue())-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendDelayed(discoveryPacket,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;publicInterfaceCommunication$o&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;multiPointSource&quot;</highlight><highlight class="normal">),<sp/>this-&gt;getParentModule()-&gt;getName())<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cPacket<sp/>*discoveryPacket2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cPacket(</highlight><highlight class="stringliteral">&quot;initQkd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket2-&gt;addPar(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).setStringValue(</highlight><highlight class="stringliteral">&quot;initQkd&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket2-&gt;addPar(</highlight><highlight class="stringliteral">&quot;srcMAC&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getParentModule()-&gt;getSubmodule(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;multiPointSource&quot;</highlight><highlight class="normal">).stringValue())-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>discoveryPacket2-&gt;addPar(</highlight><highlight class="stringliteral">&quot;desMAC&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getParentModule()-&gt;getSubmodule(this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;multiPointDestination&quot;</highlight><highlight class="normal">).stringValue())-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sendDelayed(discoveryPacket2,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;publicInterfaceCommunication$o&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_client_processor_1a969599579fd9facd62eae9afcff61b8c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_client_processor_1a969599579fd9facd62eae9afcff61b8c" kindref="member">ClientProcessor::numInitStages</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="84"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_client_processor_1ad52ec9f784c9a11cc66b55b6537a4a75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_client_processor_1ad52ec9f784c9a11cc66b55b6537a4a75" kindref="member">ClientProcessor::handleMessage</ref>(cMessage<sp/>*msg)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>cModule<sp/>*targetModule<sp/>=<sp/>this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientMemory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_client_memory" kindref="compound">ClientMemory</ref><sp/>*clientMemory<sp/>=<sp/>check_and_cast&lt;ClientMemory<sp/>*&gt;(targetModule);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>cGate<sp/>*gate<sp/>=<sp/>msg-&gt;getArrivalGate();</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(gate-&gt;isName(</highlight><highlight class="stringliteral">&quot;publicInterfaceCommunication$i&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).stringValue(),</highlight><highlight class="stringliteral">&quot;initQkdRespons&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).stringValue(),</highlight><highlight class="stringliteral">&quot;qkdRequest&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_quantum_key_entry" kindref="compound">QuantumKeyEntry</ref><sp/>*key<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_quantum_key_entry" kindref="compound">QuantumKeyEntry</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_quantum_key_entry_1aaecd120bb3e0bfce6ac6be1a1a87c861" kindref="member">setIdentity</ref>(1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key-&gt;<ref refid="class_quantum_key_entry_1ab4c6ed191ca2f70d90f70e310bf10ba7" kindref="member">setMacAddress</ref>(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;requestFrom&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientMemory-&gt;<ref refid="class_client_memory_1ade803c1296afc65383cf3a937741676b" kindref="member">addQautumKey</ref>(key);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_client_processor_1a3e6230381bde08ac52a895a4fead0d41" kindref="member">ClientProcessor::printKeyTable</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cPacket<sp/>*qkdResponse<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cPacket(</highlight><highlight class="stringliteral">&quot;qkdResponse&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qkdResponse-&gt;addPar(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).setStringValue(</highlight><highlight class="stringliteral">&quot;QKD-RESPONSE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qkdResponse-&gt;addPar(</highlight><highlight class="stringliteral">&quot;srcMAC&quot;</highlight><highlight class="normal">).setStringValue(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;desMAC&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qkdResponse-&gt;addPar(</highlight><highlight class="stringliteral">&quot;desMAC&quot;</highlight><highlight class="normal">).setStringValue(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;srcMAC&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(qkdResponse,</highlight><highlight class="stringliteral">&quot;publicInterfaceCommunication$o&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).stringValue(),</highlight><highlight class="stringliteral">&quot;QKD-ACK&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>randomKeyLength<sp/>=<sp/>this-&gt;getParentModule()-&gt;getParentModule()-&gt;par(</highlight><highlight class="stringliteral">&quot;initKeyLength&quot;</highlight><highlight class="normal">).intValue();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientMemory-&gt;<ref refid="class_client_memory_1a319d01144267835398c2cf3048ac55f3" kindref="member">setInitialKeyBin</ref>(<ref refid="class_client_processor_1ad60a5531c1427c45f7589edf4a2a6187" kindref="member">ClientProcessor::convertToBinary</ref>(randomKeyLength));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cMessage<sp/>*k1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cMessage(</highlight><highlight class="stringliteral">&quot;initialKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1-&gt;addPar(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).setStringValue(</highlight><highlight class="stringliteral">&quot;initialKey&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k1-&gt;addPar(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">).setStringValue(clientMemory-&gt;<ref refid="class_client_memory_1a7dd8ab0de164d25fee3f02614eb6d654" kindref="member">getInitialKeyBin</ref>().c_str());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(k1,</highlight><highlight class="stringliteral">&quot;quantumInterfaceCommunication$o&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).stringValue(),</highlight><highlight class="stringliteral">&quot;qkdStates&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_quantum_key_entry" kindref="compound">QuantumKeyEntry</ref><sp/>*receivedKey<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_quantum_key_entry" kindref="compound">QuantumKeyEntry</ref>();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receivedKey-&gt;<ref refid="class_quantum_key_entry_1aaecd120bb3e0bfce6ac6be1a1a87c861" kindref="member">setIdentity</ref>(1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receivedKey-&gt;<ref refid="class_quantum_key_entry_1ab4c6ed191ca2f70d90f70e310bf10ba7" kindref="member">setMacAddress</ref>(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;srcMAC&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receivedKey-&gt;<ref refid="class_quantum_key_entry_1a89346d735a430bac418248f33f18b2e0" kindref="member">setKey</ref>(<ref refid="class_client_processor_1ae012596dbec1461516aae3e4706444e1" kindref="member">ClientProcessor::compareBasis</ref>(clientMemory-&gt;<ref refid="class_client_memory_1a9ac7e8c69dbb7c9b8aa2669ecddb5a4c" kindref="member">getPolarizationStates</ref>(),<sp/>msg-&gt;par(</highlight><highlight class="stringliteral">&quot;filterUsage&quot;</highlight><highlight class="normal">).stringValue(),<sp/>clientMemory-&gt;<ref refid="class_client_memory_1a7dd8ab0de164d25fee3f02614eb6d654" kindref="member">getInitialKeyBin</ref>()).c_str());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>receivedKey-&gt;<ref refid="class_quantum_key_entry_1a8efdd7c69dff35435038d395ce537578" kindref="member">setStatus</ref>(</highlight><highlight class="stringliteral">&quot;Active&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientMemory-&gt;<ref refid="class_client_memory_1ade803c1296afc65383cf3a937741676b" kindref="member">addQautumKey</ref>(receivedKey);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_client_processor_1a3e6230381bde08ac52a895a4fead0d41" kindref="member">ClientProcessor::printKeyTable</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).stringValue(),<sp/></highlight><highlight class="stringliteral">&quot;quantumData&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientMemory-&gt;<ref refid="class_client_memory_1a8c1c7263f1fc25ebe1de06eb29a7e762" kindref="member">setPendingKey</ref>(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;siftedKey&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientMemory-&gt;<ref refid="class_client_memory_1a7623a81a19240d8ed359d7d7f321d432" kindref="member">getQuantumKey</ref>(clientMemory-&gt;<ref refid="class_client_memory_1a640f4311ef1f4935158cdfeeef2403f7" kindref="member">getPendingTransaction</ref>()).setKey(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;siftedKey&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cPacket<sp/>*polarizationStatus<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>cPacket(</highlight><highlight class="stringliteral">&quot;quantumData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polarizationStatus-&gt;addPar(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).setStringValue(</highlight><highlight class="stringliteral">&quot;quantumData&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polarizationStatus-&gt;addPar(</highlight><highlight class="stringliteral">&quot;filterUsage&quot;</highlight><highlight class="normal">).setStringValue(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;filterUsage&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polarizationStatus-&gt;addPar(</highlight><highlight class="stringliteral">&quot;srcMAC&quot;</highlight><highlight class="normal">).setStringValue(this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>polarizationStatus-&gt;addPar(</highlight><highlight class="stringliteral">&quot;desMAC&quot;</highlight><highlight class="normal">).setStringValue(clientMemory-&gt;<ref refid="class_client_memory_1a182e9304d2a8f82a39c58b6f6a141ba0" kindref="member">getPendingKeyMacAddress</ref>().c_str());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send(polarizationStatus,</highlight><highlight class="stringliteral">&quot;publicInterfaceCommunication$o&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientMemory-&gt;<ref refid="class_client_memory_1a7623a81a19240d8ed359d7d7f321d432" kindref="member">getQuantumKey</ref>(clientMemory-&gt;<ref refid="class_client_memory_1a640f4311ef1f4935158cdfeeef2403f7" kindref="member">getPendingTransaction</ref>()).setStatus(</highlight><highlight class="stringliteral">&quot;Active&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_client_processor_1a3e6230381bde08ac52a895a4fead0d41" kindref="member">ClientProcessor::printKeyTable</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">).stringValue(),</highlight><highlight class="stringliteral">&quot;pfilter&quot;</highlight><highlight class="normal">)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clientMemory-&gt;<ref refid="class_client_memory_1a8c072774722e1de3ca73de2c7045e0de" kindref="member">setPolarizationStates</ref>(msg-&gt;par(</highlight><highlight class="stringliteral">&quot;polarizationFilterUsed&quot;</highlight><highlight class="normal">).stringValue());</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_client_processor_1a6b974895f0bc14d5f5be5a221a9216d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_client_processor_1a6b974895f0bc14d5f5be5a221a9216d5" kindref="member">ClientProcessor::countSetBits</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>n<sp/>&amp;<sp/>1;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>&gt;&gt;=<sp/>1;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_client_processor_1ad60a5531c1427c45f7589edf4a2a6187" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_client_processor_1ad60a5531c1427c45f7589edf4a2a6187" kindref="member">ClientProcessor::convertToBinary</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>initialKey)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>binKey<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;initialKey;<sp/>i++)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binKey.append(std::to_string(rand()&amp;1));</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>binKey;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="class_client_processor_1a8ffe1d1f59d3848a2f34cfdf51f0d4be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_client_processor_1a8ffe1d1f59d3848a2f34cfdf51f0d4be" kindref="member">ClientProcessor::printMacTable</ref>()</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>cModule<sp/>*targetModule<sp/>=<sp/>this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientMemory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_client_memory" kindref="compound">ClientMemory</ref><sp/>*clientMemory<sp/>=<sp/>check_and_cast&lt;ClientMemory<sp/>*&gt;(targetModule);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;[*]<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;this-&gt;getName()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>MAC<sp/>Address<sp/>Table\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;=============================================================================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Identity<sp/><sp/><sp/><sp/><sp/>Interface<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MacAddress<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q_Interface<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;=============================================================================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a126802b222c6e78fcd5626dad7393a98" kindref="member">getMacTable</ref>(0).<ref refid="class_mac_table_entry_1aa4918b248eb4bc9a5cbce2d22ee1044e" kindref="member">getIdentity</ref>()</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a126802b222c6e78fcd5626dad7393a98" kindref="member">getMacTable</ref>(0).<ref refid="class_mac_table_entry_1af25bc86738003fb75bb3e4d0e74cda88" kindref="member">getInterface</ref>()</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a126802b222c6e78fcd5626dad7393a98" kindref="member">getMacTable</ref>(0).<ref refid="class_mac_table_entry_1aaa684cc0b7d88a4758740c26d1027935" kindref="member">getMacAddress</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a126802b222c6e78fcd5626dad7393a98" kindref="member">getMacTable</ref>(0).<ref refid="class_mac_table_entry_1a506d91d4588ee6858a1df8abba79e435" kindref="member">getQuantumInterfaceId</ref>()</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a126802b222c6e78fcd5626dad7393a98" kindref="member">getMacTable</ref>(0).<ref refid="class_mac_table_entry_1aba16ae27a9b129a262790631ecd6149e" kindref="member">getType</ref>()</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;=============================================================================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="class_client_processor_1a3e6230381bde08ac52a895a4fead0d41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_client_processor_1a3e6230381bde08ac52a895a4fead0d41" kindref="member">ClientProcessor::printKeyTable</ref>()</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>cModule<sp/>*targetModule<sp/>=<sp/>this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientMemory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_client_memory" kindref="compound">ClientMemory</ref><sp/>*clientMemory<sp/>=<sp/>check_and_cast&lt;ClientMemory<sp/>*&gt;(targetModule);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;[*]<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;this-&gt;getParentModule()-&gt;getName()&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>Quantum<sp/>Key<sp/>Table\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;==============================================================================================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/>MacAddress<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Status<sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;==============================================================================================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;clientMemory-&gt;<ref refid="class_client_memory_1a6271ffa66466e21b9a61558f6de0b545" kindref="member">getNumberOfKey</ref>();<sp/>i++)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(clientMemory-&gt;<ref refid="class_client_memory_1a7623a81a19240d8ed359d7d7f321d432" kindref="member">getQuantumKey</ref>(i).<ref refid="class_quantum_key_entry_1a3faa0418d067d5fd090be1a7973bf6db" kindref="member">getMacAddress</ref>(),this-&gt;getParentModule()-&gt;getSubmodule(</highlight><highlight class="stringliteral">&quot;clientPublicInterface&quot;</highlight><highlight class="normal">)-&gt;par(</highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">).stringValue())<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a7623a81a19240d8ed359d7d7f321d432" kindref="member">getQuantumKey</ref>(i).<ref refid="class_quantum_key_entry_1a85e0afd2c799019ca38f19c1670c7733" kindref="member">getIdentity</ref>()</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a7623a81a19240d8ed359d7d7f321d432" kindref="member">getQuantumKey</ref>(i).<ref refid="class_quantum_key_entry_1a3faa0418d067d5fd090be1a7973bf6db" kindref="member">getMacAddress</ref>()</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a7623a81a19240d8ed359d7d7f321d432" kindref="member">getQuantumKey</ref>(i).<ref refid="class_quantum_key_entry_1a1a45fdd0292e10bb01eeb69b55119cd5" kindref="member">getKey</ref>()</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;clientMemory-&gt;<ref refid="class_client_memory_1a7623a81a19240d8ed359d7d7f321d432" kindref="member">getQuantumKey</ref>(i).<ref refid="class_quantum_key_entry_1a303fa302c2f0fea5162dca289aa3b2d7" kindref="member">getStatus</ref>()</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>EV&lt;&lt;</highlight><highlight class="stringliteral">&quot;==============================================================================================================\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="class_client_processor_1ae012596dbec1461516aae3e4706444e1" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_client_processor_1ae012596dbec1461516aae3e4706444e1" kindref="member">ClientProcessor::compareBasis</ref>(std::string<sp/>statesUsed,<sp/>std::string<sp/>receivedStates,<sp/>std::string<sp/>randomBits)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>key;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>statsU[statesUsed.length()];</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(statsU,<sp/>statesUsed.c_str());</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>statsR[receivedStates.length()];</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(statsR,<sp/>receivedStates.c_str());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bitsR[randomBits.length()];</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(bitsR,<sp/>randomBits.c_str());</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;receivedStates.length();<sp/>i++)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statsU[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>statsR[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>+=<sp/>bitsR[i];</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(statsU[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>statsR[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>+=<sp/>bitsR[i];</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statsU[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>statsR[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>+=<sp/>bitsR[i];</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statsU[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>statsR[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;x&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>+=<sp/>bitsR[i];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ClientProcessor.cc"/>
  </compounddef>
</doxygen>
