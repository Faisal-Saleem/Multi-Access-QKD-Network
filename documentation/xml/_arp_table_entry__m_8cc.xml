<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_arp_table_entry__m_8cc" kind="file" language="C++">
    <compoundname>ArpTableEntry_m.cc</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes refid="_arp_table_entry__m_8h" local="yes">ArpTableEntry_m.h</includes>
    <incdepgraph>
      <node id="1">
        <label>ArpTableEntry_m.cc</label>
        <link refid="_arp_table_entry__m_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ArpTableEntry_m.h</label>
        <link refid="_arp_table_entry__m_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="5">
        <label>omnetpp.h</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_arp_table_entry_descriptor" prot="public">ArpTableEntryDescriptor</innerclass>
    <innernamespace refid="namespaceomnetpp">omnetpp</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="_arp_table_entry__m_8cc_1a2a3239dc074505be18c8c72b02d560d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const std::vector&lt; T, A &gt; &amp;vec)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const std::vector&lt; T, A &gt; &amp;</type>
          <declname>vec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ArpTableEntry_m.cc" line="162" column="8" bodyfile="ArpTableEntry_m.cc" bodystart="162" bodyend="178" declfile="ArpTableEntry_m.cc" declline="154" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="_arp_table_entry__m_8cc_1abe11a22228762d74cdc9a8f3b0a5e471" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const T &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const T &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ArpTableEntry_m.cc" line="158" column="8" bodyfile="ArpTableEntry_m.cc" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="_arp_table_entry__m_8cc_1a39accf24976204622c0ac317f722d250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Register_Class</definition>
        <argsstring>(ArpTableEntry) ArpTableEntry</argsstring>
        <name>Register_Class</name>
        <param>
          <type><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ArpTableEntry_m.cc" line="180" column="1" bodyfile="ArpTableEntry_m.cc" bodystart="180" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="_arp_table_entry__m_8cc_1a098ffe8206fef7c2a8c458e4d58243f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Register_ClassDescriptor</definition>
        <argsstring>(ArpTableEntryDescriptor) ArpTableEntryDescriptor</argsstring>
        <name>Register_ClassDescriptor</name>
        <param>
          <type><ref refid="class_arp_table_entry_descriptor" kindref="compound">ArpTableEntryDescriptor</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ArpTableEntry_m.cc" line="338" column="1" bodyfile="ArpTableEntry_m.cc" bodystart="338" bodyend="343"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generated<sp/>file,<sp/>do<sp/>not<sp/>edit!<sp/>Created<sp/>by<sp/>nedtool<sp/>5.4<sp/>from<sp/>ArpTableEntry.msg.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Disable<sp/>warnings<sp/>about<sp/>unused<sp/>variables,<sp/>empty<sp/>switch<sp/>stmts,<sp/>etc:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>warning(disable:4101)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>warning(disable:4065)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wshadow&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wconversion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-parameter&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wc++98-compat&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunreachable-code-break&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wold-style-cast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wshadow&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wconversion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wunused-parameter&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wold-style-cast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wsuggest-attribute=noreturn&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wfloat-conversion&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_arp_table_entry__m_8h" kindref="compound">ArpTableEntry_m.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespaceomnetpp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceomnetpp" kindref="compound">omnetpp</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Template<sp/>pack/unpack<sp/>rules.<sp/>They<sp/>are<sp/>declared<sp/>*after*<sp/>a1l<sp/>type-specific<sp/>pack<sp/>functions<sp/>for<sp/>multiple<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>They<sp/>are<sp/>in<sp/>the<sp/>omnetpp<sp/>namespace,<sp/>to<sp/>allow<sp/>them<sp/>to<sp/>be<sp/>found<sp/>by<sp/>argument-dependent<sp/>lookup<sp/>via<sp/>the<sp/>cCommBuffer<sp/>argument</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Packing/unpacking<sp/>an<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="38" refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(omnetpp::cCommBuffer<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,A&gt;&amp;<sp/>v)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>v.size();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>n);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>v[i]);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="47" refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(omnetpp::cCommBuffer<sp/>*buffer,<sp/>std::vector&lt;T,A&gt;&amp;<sp/>v)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>n);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>v.resize(n);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>v[i]);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Packing/unpacking<sp/>an<sp/>std::list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="58" refid="namespaceomnetpp_1a1043d9829c084411066b9e9469d75942" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(omnetpp::cCommBuffer<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::list&lt;T,A&gt;&amp;<sp/>l)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)l.size());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::list&lt;T,A&gt;::const_iterator<sp/>it<sp/>=<sp/>l.begin();<sp/>it<sp/>!=<sp/>l.end();<sp/>++it)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>(T&amp;)*it);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="66" refid="namespaceomnetpp_1a28632f95fc2029c95828ed30e379f9ee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(omnetpp::cCommBuffer<sp/>*buffer,<sp/>std::list&lt;T,A&gt;&amp;<sp/>l)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>n);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l.push_back(T());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>l.back());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Packing/unpacking<sp/>an<sp/>std::set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="78" refid="namespaceomnetpp_1a44c0e632aecd37f539392e96147deef0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(omnetpp::cCommBuffer<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::set&lt;T,Tr,A&gt;&amp;<sp/>s)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)s.size());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::set&lt;T,Tr,A&gt;::const_iterator<sp/>it<sp/>=<sp/>s.begin();<sp/>it<sp/>!=<sp/>s.end();<sp/>++it)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>*it);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="86" refid="namespaceomnetpp_1a8ae2ca4f89c4d2f8a95512b5b2936c79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(omnetpp::cCommBuffer<sp/>*buffer,<sp/>std::set&lt;T,Tr,A&gt;&amp;<sp/>s)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>n);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>x);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.insert(x);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Packing/unpacking<sp/>an<sp/>std::map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="99" refid="namespaceomnetpp_1ae14adea382a91da2e1157d74981a946b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(omnetpp::cCommBuffer<sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;K,V,Tr,A&gt;&amp;<sp/>m)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)m.size());</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;K,V,Tr,A&gt;::const_iterator<sp/>it<sp/>=<sp/>m.begin();<sp/>it<sp/>!=<sp/>m.end();<sp/>++it)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>it-&gt;first);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(buffer,<sp/>it-&gt;second);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>V,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Tr,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="109" refid="namespaceomnetpp_1a6fd2557203871e46db43fa9c63968117" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(omnetpp::cCommBuffer<sp/>*buffer,<sp/>std::map&lt;K,V,Tr,A&gt;&amp;<sp/>m)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>n);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/>k;<sp/>V<sp/>v;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>k);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(buffer,<sp/>v);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[k]<sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>pack/unpack<sp/>function<sp/>for<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="123" refid="namespaceomnetpp_1a55066a1505082b338d233957ee65f0ac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1a55066a1505082b338d233957ee65f0ac" kindref="member">doParsimArrayPacking</ref>(omnetpp::cCommBuffer<sp/>*b,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(b,<sp/>t[i]);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="130" refid="namespaceomnetpp_1aace4e02d3cd181249cf81a4bf8827fa7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1aace4e02d3cd181249cf81a4bf8827fa7" kindref="member">doParsimArrayUnpacking</ref>(omnetpp::cCommBuffer<sp/>*b,<sp/>T<sp/>*t,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="131"><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(b,<sp/>t[i]);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Default<sp/>rule<sp/>to<sp/>prevent<sp/>compiler<sp/>from<sp/>choosing<sp/>base<sp/>class&apos;<sp/>doParsimPacking()<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="138" refid="namespaceomnetpp_1a41f5f036ca92034bc3b29ad1f9f96903" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1aa55507da29724bc32cb1377349b22c87" kindref="member">doParsimPacking</ref>(omnetpp::cCommBuffer<sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/>t)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>omnetpp::cRuntimeError(</highlight><highlight class="stringliteral">&quot;Parsim<sp/>error:<sp/>No<sp/>doParsimPacking()<sp/>function<sp/>for<sp/>type<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>omnetpp::opp_typename(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(t)));</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="144" refid="namespaceomnetpp_1a7336b297a32484942d52667dae7c7248" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceomnetpp_1a5d85de2bce765edaa5f7b1651f94f37c" kindref="member">doParsimUnpacking</ref>(omnetpp::cCommBuffer<sp/>*,<sp/>T&amp;<sp/>t)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>omnetpp::cRuntimeError(</highlight><highlight class="stringliteral">&quot;Parsim<sp/>error:<sp/>No<sp/>doParsimUnpacking()<sp/>function<sp/>for<sp/>type<sp/>%s&quot;</highlight><highlight class="normal">,<sp/>omnetpp::opp_typename(</highlight><highlight class="keyword">typeid</highlight><highlight class="normal">(t)));</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>omnetpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">std::ostream&amp;<sp/><ref refid="_arp_table_entry__m_8cc_1a2a3239dc074505be18c8c72b02d560d2" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,A&gt;&amp;<sp/>vec);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Template<sp/>rule<sp/>which<sp/>fires<sp/>if<sp/>a<sp/>struct<sp/>or<sp/>class<sp/>doesn&apos;t<sp/>have<sp/>operator&lt;&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="158" refid="_arp_table_entry__m_8cc_1abe11a22228762d74cdc9a8f3b0a5e471" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="_arp_table_entry__m_8cc_1a2a3239dc074505be18c8c72b02d560d2" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator&lt;&lt;<sp/>for<sp/>std::vector&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>A&gt;</highlight></codeline>
<codeline lineno="162" refid="_arp_table_entry__m_8cc_1a2a3239dc074505be18c8c72b02d560d2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="_arp_table_entry__m_8cc_1a2a3239dc074505be18c8c72b02d560d2" kindref="member">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;T,A&gt;&amp;<sp/>vec)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>out.put(</highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::vector&lt;T,A&gt;::const_iterator<sp/>it<sp/>=<sp/>vec.begin();<sp/>it<sp/>!=<sp/>vec.end();<sp/>++it)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>vec.begin())<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out.put(</highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">);<sp/>out.put(</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*it;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>out.put(</highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[32];</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(buf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(size=%u)&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)vec.size());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>out.write(buf,<sp/>strlen(buf));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="_arp_table_entry__m_8cc_1a39accf24976204622c0ac317f722d250" refkind="member"><highlight class="normal"><ref refid="_arp_table_entry__m_8cc_1a39accf24976204622c0ac317f722d250" kindref="member">Register_Class</ref>(<ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="class_arp_table_entry_1a3ce10ffcff3e97a62eb918ba390a674a" kindref="member">ArpTableEntry::ArpTableEntry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>kind)<sp/>:<sp/>::<ref refid="namespaceomnetpp" kindref="compound">omnetpp</ref>::cPacket(name,kind)</highlight></codeline>
<codeline lineno="183"><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;identity<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_arp_table_entry_1a2b374e857e8bf59e5ec1da3eb8395bc1" refkind="member"><highlight class="normal"><ref refid="class_arp_table_entry_1a3ce10ffcff3e97a62eb918ba390a674a" kindref="member">ArpTableEntry::ArpTableEntry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref>&amp;<sp/>other)<sp/>:<sp/>::<ref refid="namespaceomnetpp" kindref="compound">omnetpp</ref>::cPacket(other)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(other);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_arp_table_entry_1a93e1682952483b93a91d34d50601f80f" refkind="member"><highlight class="normal"><ref refid="class_arp_table_entry_1a93e1682952483b93a91d34d50601f80f" kindref="member">ArpTableEntry::~ArpTableEntry</ref>()</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_arp_table_entry_1accca9016a9cdf76d6c358302ef4ccbe3" refkind="member"><highlight class="normal"><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref>&amp;<sp/><ref refid="class_arp_table_entry_1accca9016a9cdf76d6c358302ef4ccbe3" kindref="member">ArpTableEntry::operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">==&amp;other)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>::omnetpp::cPacket::operator=(other);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>copy(other);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ArpTableEntry::copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_arp_table_entry_1a3160c0706c213dace129cd5f57621c25" kindref="member">identity</ref><sp/>=<sp/>other.<ref refid="class_arp_table_entry_1a3160c0706c213dace129cd5f57621c25" kindref="member">identity</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_arp_table_entry_1ac1bb1a79bf2e869b78d664f3079a2525" kindref="member">protocol</ref><sp/>=<sp/>other.<ref refid="class_arp_table_entry_1ac1bb1a79bf2e869b78d664f3079a2525" kindref="member">protocol</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_arp_table_entry_1a8ddd2545a874cce6dd604b92e6d9b2cf" kindref="member">ipAddress</ref><sp/>=<sp/>other.<ref refid="class_arp_table_entry_1a8ddd2545a874cce6dd604b92e6d9b2cf" kindref="member">ipAddress</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_arp_table_entry_1a166ecfb9054bab1989a7a9db12ee1544" kindref="member">macAddress</ref><sp/>=<sp/>other.<ref refid="class_arp_table_entry_1a166ecfb9054bab1989a7a9db12ee1544" kindref="member">macAddress</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_arp_table_entry_1a36a2551b64389e13147f8bfa3bbe1e40" kindref="member">age</ref><sp/>=<sp/>other.<ref refid="class_arp_table_entry_1a36a2551b64389e13147f8bfa3bbe1e40" kindref="member">age</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_arp_table_entry_1a1743b6c2db21200eafb1ea618bd97a19" kindref="member">type</ref><sp/>=<sp/>other.<ref refid="class_arp_table_entry_1a1743b6c2db21200eafb1ea618bd97a19" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keyword">interface<sp/></highlight><highlight class="normal">=<sp/>other.interface;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_arp_table_entry_1a8297a2585239db52b62f6f1de067e708" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1a8297a2585239db52b62f6f1de067e708" kindref="member">ArpTableEntry::parsimPack</ref>(omnetpp::cCommBuffer<sp/>*b)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>::omnetpp::cPacket::parsimPack(b);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a41f5f036ca92034bc3b29ad1f9f96903" kindref="member">doParsimPacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a3160c0706c213dace129cd5f57621c25" kindref="member">identity</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a41f5f036ca92034bc3b29ad1f9f96903" kindref="member">doParsimPacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1ac1bb1a79bf2e869b78d664f3079a2525" kindref="member">protocol</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a41f5f036ca92034bc3b29ad1f9f96903" kindref="member">doParsimPacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a8ddd2545a874cce6dd604b92e6d9b2cf" kindref="member">ipAddress</ref>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a41f5f036ca92034bc3b29ad1f9f96903" kindref="member">doParsimPacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a166ecfb9054bab1989a7a9db12ee1544" kindref="member">macAddress</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a41f5f036ca92034bc3b29ad1f9f96903" kindref="member">doParsimPacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a36a2551b64389e13147f8bfa3bbe1e40" kindref="member">age</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a41f5f036ca92034bc3b29ad1f9f96903" kindref="member">doParsimPacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a1743b6c2db21200eafb1ea618bd97a19" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a41f5f036ca92034bc3b29ad1f9f96903" kindref="member">doParsimPacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a3a7f40f6ceb0db24444300e2e78c6d85" kindref="member">interface</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="class_arp_table_entry_1ae93b440a5b71f3dd6054fbab4c5a5ed3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1ae93b440a5b71f3dd6054fbab4c5a5ed3" kindref="member">ArpTableEntry::parsimUnpack</ref>(omnetpp::cCommBuffer<sp/>*b)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>::omnetpp::cPacket::parsimUnpack(b);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a7336b297a32484942d52667dae7c7248" kindref="member">doParsimUnpacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a3160c0706c213dace129cd5f57621c25" kindref="member">identity</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a7336b297a32484942d52667dae7c7248" kindref="member">doParsimUnpacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1ac1bb1a79bf2e869b78d664f3079a2525" kindref="member">protocol</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a7336b297a32484942d52667dae7c7248" kindref="member">doParsimUnpacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a8ddd2545a874cce6dd604b92e6d9b2cf" kindref="member">ipAddress</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a7336b297a32484942d52667dae7c7248" kindref="member">doParsimUnpacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a166ecfb9054bab1989a7a9db12ee1544" kindref="member">macAddress</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a7336b297a32484942d52667dae7c7248" kindref="member">doParsimUnpacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a36a2551b64389e13147f8bfa3bbe1e40" kindref="member">age</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a7336b297a32484942d52667dae7c7248" kindref="member">doParsimUnpacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a1743b6c2db21200eafb1ea618bd97a19" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceomnetpp_1a7336b297a32484942d52667dae7c7248" kindref="member">doParsimUnpacking</ref>(b,this-&gt;<ref refid="class_arp_table_entry_1a3a7f40f6ceb0db24444300e2e78c6d85" kindref="member">interface</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_arp_table_entry_1a2c3fa9d25b2ddef04ae1f7feec5d2970" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1a2c3fa9d25b2ddef04ae1f7feec5d2970" kindref="member">ArpTableEntry::getIdentity</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="241"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_arp_table_entry_1a3160c0706c213dace129cd5f57621c25" kindref="member">identity</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_arp_table_entry_1aba9fc2ed91e62fb9af640ba3d2e9ffc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1aba9fc2ed91e62fb9af640ba3d2e9ffc8" kindref="member">ArpTableEntry::setIdentity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>identity)</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;identity<sp/>=<sp/><ref refid="class_arp_table_entry_1a3160c0706c213dace129cd5f57621c25" kindref="member">identity</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_arp_table_entry_1ad809c04c43dda3b0234ddc36a910b947" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_arp_table_entry_1ad809c04c43dda3b0234ddc36a910b947" kindref="member">ArpTableEntry::getProtocol</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="251"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_arp_table_entry_1ac1bb1a79bf2e869b78d664f3079a2525" kindref="member">protocol</ref>.c_str();</highlight></codeline>
<codeline lineno="253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="class_arp_table_entry_1a87672c8282d9fa822567fd08a361130c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1a87672c8282d9fa822567fd08a361130c" kindref="member">ArpTableEntry::setProtocol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>protocol)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;protocol<sp/>=<sp/><ref refid="class_arp_table_entry_1ac1bb1a79bf2e869b78d664f3079a2525" kindref="member">protocol</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_arp_table_entry_1ae9c88488bdcd3409b5a048db053bec68" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_arp_table_entry_1ae9c88488bdcd3409b5a048db053bec68" kindref="member">ArpTableEntry::getIpAddress</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="261"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_arp_table_entry_1a8ddd2545a874cce6dd604b92e6d9b2cf" kindref="member">ipAddress</ref>.c_str();</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265" refid="class_arp_table_entry_1aa5e5949d12f291be1bc74cf1bcde92bd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1aa5e5949d12f291be1bc74cf1bcde92bd" kindref="member">ArpTableEntry::setIpAddress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>ipAddress)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ipAddress<sp/>=<sp/><ref refid="class_arp_table_entry_1a8ddd2545a874cce6dd604b92e6d9b2cf" kindref="member">ipAddress</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="class_arp_table_entry_1a53fd47b0ac0efe30d7c1965ce2808d9d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_arp_table_entry_1a53fd47b0ac0efe30d7c1965ce2808d9d" kindref="member">ArpTableEntry::getMacAddress</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="271"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_arp_table_entry_1a166ecfb9054bab1989a7a9db12ee1544" kindref="member">macAddress</ref>.c_str();</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_arp_table_entry_1a144783c14f0992037f93b00d34b3521b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1a144783c14f0992037f93b00d34b3521b" kindref="member">ArpTableEntry::setMacAddress</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_switch_memory_8h_1abfbb64a2ec7afa6cbb18aa171775c9ecaba7ec5617dcd086ea11b2875db29fb6c" kindref="member">macAddress</ref>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;macAddress<sp/>=<sp/><ref refid="class_arp_table_entry_1a166ecfb9054bab1989a7a9db12ee1544" kindref="member">macAddress</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="class_arp_table_entry_1a9a04233d547cef4358aa375a617c01dc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_arp_table_entry_1a9a04233d547cef4358aa375a617c01dc" kindref="member">ArpTableEntry::getAge</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="281"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_arp_table_entry_1a36a2551b64389e13147f8bfa3bbe1e40" kindref="member">age</ref>.c_str();</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="class_arp_table_entry_1a03e0a5373f20dc6672e8ae21680d4111" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1a03e0a5373f20dc6672e8ae21680d4111" kindref="member">ArpTableEntry::setAge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>age)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;age<sp/>=<sp/><ref refid="class_arp_table_entry_1a36a2551b64389e13147f8bfa3bbe1e40" kindref="member">age</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="class_arp_table_entry_1a90bdde86b373d5fafb2d2d74525263ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1a90bdde86b373d5fafb2d2d74525263ed" kindref="member">ArpTableEntry::getType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="291"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_arp_table_entry_1a1743b6c2db21200eafb1ea618bd97a19" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="class_arp_table_entry_1ad4a908fc048e173535c155886fe96283" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1ad4a908fc048e173535c155886fe96283" kindref="member">ArpTableEntry::setType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;type<sp/>=<sp/><ref refid="class_arp_table_entry_1a1743b6c2db21200eafb1ea618bd97a19" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="class_arp_table_entry_1a350939d3434dc7dd403114febba08e20" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_arp_table_entry_1a350939d3434dc7dd403114febba08e20" kindref="member">ArpTableEntry::getInterface</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="301"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_arp_table_entry_1a3a7f40f6ceb0db24444300e2e78c6d85" kindref="member">interface</ref>.c_str();</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="class_arp_table_entry_1a87466843f83577d378f7c20e062f97da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_1a87466843f83577d378f7c20e062f97da" kindref="member">ArpTableEntry::setInterface</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_switch_memory_8h_1abfbb64a2ec7afa6cbb18aa171775c9eca7e91d3bb453d1a51a3cb4849a09a05b4" kindref="member">interface</ref>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;</highlight><highlight class="keyword">interface<sp/></highlight><highlight class="normal">=<sp/>interface;</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="class_arp_table_entry_descriptor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_arp_table_entry_descriptor" kindref="compound">ArpTableEntryDescriptor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>omnetpp::cClassDescriptor</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**propertynames;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_arp_table_entry_descriptor_1a3af88e931c928c1a5900d6d52fe18c95" kindref="member">ArpTableEntryDescriptor</ref>();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1abeda106234cdf1608d6b37b6957d59e3" kindref="member">~ArpTableEntryDescriptor</ref>();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a97ce795b0abc838bdcd37468cc1c2a6f" kindref="member">doesSupport</ref>(omnetpp::cObject<sp/>*obj)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="class_arp_table_entry_descriptor_1aa55c4c727ea6e55180bd69fdce0d8cc8" kindref="member">getPropertyNames</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1aa223c2382b4bdd4fe7298af7c9a7cff6" kindref="member">getProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*propertyname)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1a39349e9d6a968b909089cd9b36207852" kindref="member">getFieldName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a105535c48240c5cd5681a8ab21ee2607" kindref="member">findField</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a86f8906895f36d4602aed1fdf4640d58" kindref="member">getFieldTypeFlags</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1a2a2721b8a1693e38fe838f0b7fbe881d" kindref="member">getFieldTypeString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="class_arp_table_entry_descriptor_1af1e05ab2733c4f45c53853c325e55edc" kindref="member">getFieldPropertyNames</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1ae0a98e276e4dd80ae9155ab164c4a223" kindref="member">getFieldProperty</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*propertyname)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a3300191face579f4cb2fcf8de301f882" kindref="member">getFieldArraySize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1a4b71aa03d035b93a7ee1818489a43fd3" kindref="member">getFieldDynamicTypeString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_arp_table_entry_descriptor_1aaf5aad0b76bd0167744cb3f0f9176a77" kindref="member">getFieldValueAsString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a5fb72498fa0d12ad371365673930c293" kindref="member">setFieldValueAsString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1a5d3f171a8f5868a8f93dfa57266fd9d5" kindref="member">getFieldStructName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1afee450d3728d5dd41849cd656546af22" kindref="member">getFieldStructValuePointer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">};</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="_arp_table_entry__m_8cc_1a098ffe8206fef7c2a8c458e4d58243f9" refkind="member"><highlight class="normal"><ref refid="_arp_table_entry__m_8cc_1a098ffe8206fef7c2a8c458e4d58243f9" kindref="member">Register_ClassDescriptor</ref>(<ref refid="class_arp_table_entry_descriptor" kindref="compound">ArpTableEntryDescriptor</ref>)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><ref refid="class_arp_table_entry_descriptor_1a3af88e931c928c1a5900d6d52fe18c95" kindref="member">ArpTableEntryDescriptor::ArpTableEntryDescriptor</ref>()<sp/>:<sp/><ref refid="namespaceomnetpp" kindref="compound">omnetpp</ref>::cClassDescriptor(</highlight><highlight class="stringliteral">&quot;ArpTableEntry&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;omnetpp::cPacket&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>propertynames<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="class_arp_table_entry_descriptor_1abeda106234cdf1608d6b37b6957d59e3" refkind="member"><highlight class="normal"><ref refid="class_arp_table_entry_descriptor_1abeda106234cdf1608d6b37b6957d59e3" kindref="member">ArpTableEntryDescriptor::~ArpTableEntryDescriptor</ref>()</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>propertynames;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="class_arp_table_entry_descriptor_1a97ce795b0abc838bdcd37468cc1c2a6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a97ce795b0abc838bdcd37468cc1c2a6f" kindref="member">ArpTableEntryDescriptor::doesSupport</ref>(omnetpp::cObject<sp/>*obj)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="351"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dynamic_cast&lt;ArpTableEntry<sp/>*&gt;(obj)!=</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="class_arp_table_entry_descriptor_1aa55c4c727ea6e55180bd69fdce0d8cc8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="class_arp_table_entry_descriptor_1aa55c4c727ea6e55180bd69fdce0d8cc8" kindref="member">ArpTableEntryDescriptor::getPropertyNames</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="356"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!propertynames)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*names[]<sp/>=<sp/>{<sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**basenames<sp/>=<sp/>basedesc<sp/>?<sp/>basedesc-&gt;getPropertyNames()<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propertynames<sp/>=<sp/>mergeLists(basenames,<sp/>names);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>propertynames;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="class_arp_table_entry_descriptor_1aa223c2382b4bdd4fe7298af7c9a7cff6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1aa223c2382b4bdd4fe7298af7c9a7cff6" kindref="member">ArpTableEntryDescriptor::getProperty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*propertyname)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="367"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc<sp/>?<sp/>basedesc-&gt;getProperty(propertyname)<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">ArpTableEntryDescriptor::getFieldCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="373"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc<sp/>?<sp/>7+basedesc-&gt;getFieldCount()<sp/>:<sp/>7;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378" refid="class_arp_table_entry_descriptor_1a86f8906895f36d4602aed1fdf4640d58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a86f8906895f36d4602aed1fdf4640d58" kindref="member">ArpTableEntryDescriptor::getFieldTypeFlags</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="379"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldTypeFlags(field);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fieldTypeFlags[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ISEDITABLE,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ISEDITABLE,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ISEDITABLE,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ISEDITABLE,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ISEDITABLE,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ISEDITABLE,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ISEDITABLE,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(field&gt;=0<sp/>&amp;&amp;<sp/>field&lt;7)<sp/>?<sp/>fieldTypeFlags[field]<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="class_arp_table_entry_descriptor_1a39349e9d6a968b909089cd9b36207852" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1a39349e9d6a968b909089cd9b36207852" kindref="member">ArpTableEntryDescriptor::getFieldName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="399"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldName(field);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldNames[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;identity&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;protocol&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;ipAddress&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;interface&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(field&gt;=0<sp/>&amp;&amp;<sp/>field&lt;7)<sp/>?<sp/>fieldNames[field]<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418" refid="class_arp_table_entry_descriptor_1a105535c48240c5cd5681a8ab21ee2607" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a105535c48240c5cd5681a8ab21ee2607" kindref="member">ArpTableEntryDescriptor::findField</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="419"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base<sp/>=<sp/>basedesc<sp/>?<sp/>basedesc-&gt;getFieldCount()<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldName[0]==</highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strcmp(fieldName,<sp/></highlight><highlight class="stringliteral">&quot;identity&quot;</highlight><highlight class="normal">)==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base+0;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldName[0]==</highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strcmp(fieldName,<sp/></highlight><highlight class="stringliteral">&quot;protocol&quot;</highlight><highlight class="normal">)==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base+1;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldName[0]==</highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strcmp(fieldName,<sp/></highlight><highlight class="stringliteral">&quot;ipAddress&quot;</highlight><highlight class="normal">)==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base+2;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldName[0]==</highlight><highlight class="charliteral">&apos;m&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strcmp(fieldName,<sp/></highlight><highlight class="stringliteral">&quot;macAddress&quot;</highlight><highlight class="normal">)==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base+3;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldName[0]==</highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strcmp(fieldName,<sp/></highlight><highlight class="stringliteral">&quot;age&quot;</highlight><highlight class="normal">)==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base+4;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldName[0]==</highlight><highlight class="charliteral">&apos;t&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strcmp(fieldName,<sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">)==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base+5;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fieldName[0]==</highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>strcmp(fieldName,<sp/></highlight><highlight class="stringliteral">&quot;interface&quot;</highlight><highlight class="normal">)==0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base+6;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc<sp/>?<sp/>basedesc-&gt;findField(fieldName)<sp/>:<sp/>-1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="class_arp_table_entry_descriptor_1a2a2721b8a1693e38fe838f0b7fbe881d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1a2a2721b8a1693e38fe838f0b7fbe881d" kindref="member">ArpTableEntryDescriptor::getFieldTypeString</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="433"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldTypeString(field);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldTypeStrings[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;string&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(field&gt;=0<sp/>&amp;&amp;<sp/>field&lt;7)<sp/>?<sp/>fieldTypeStrings[field]<sp/>:<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="class_arp_table_entry_descriptor_1af1e05ab2733c4f45c53853c325e55edc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="class_arp_table_entry_descriptor_1af1e05ab2733c4f45c53853c325e55edc" kindref="member">ArpTableEntryDescriptor::getFieldPropertyNames</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="453"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldPropertyNames(field);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="class_arp_table_entry_descriptor_1ae0a98e276e4dd80ae9155ab164c4a223" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1ae0a98e276e4dd80ae9155ab164c4a223" kindref="member">ArpTableEntryDescriptor::getFieldProperty</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*propertyname)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="466"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldProperty(field,<sp/>propertyname);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)<sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="class_arp_table_entry_descriptor_1a3300191face579f4cb2fcf8de301f882" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a3300191face579f4cb2fcf8de301f882" kindref="member">ArpTableEntryDescriptor::getFieldArraySize</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="479"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldArraySize(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>field);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*pp<sp/>=<sp/>(<ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*)</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">;<sp/>(void)pp;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal">}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492" refid="class_arp_table_entry_descriptor_1a4b71aa03d035b93a7ee1818489a43fd3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1a4b71aa03d035b93a7ee1818489a43fd3" kindref="member">ArpTableEntryDescriptor::getFieldDynamicTypeString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="493"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldDynamicTypeString(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,field,i);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*pp<sp/>=<sp/>(<ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*)</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">;<sp/>(void)pp;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal">}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506" refid="class_arp_table_entry_descriptor_1aaf5aad0b76bd0167744cb3f0f9176a77" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_arp_table_entry_descriptor_1aaf5aad0b76bd0167744cb3f0f9176a77" kindref="member">ArpTableEntryDescriptor::getFieldValueAsString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="507"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldValueAsString(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,field,i);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*pp<sp/>=<sp/>(<ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*)</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">;<sp/>(void)pp;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>long2string(pp-&gt;<ref refid="class_arp_table_entry_1a2c3fa9d25b2ddef04ae1f7feec5d2970" kindref="member">getIdentity</ref>());</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oppstring2string(pp-&gt;<ref refid="class_arp_table_entry_1ad809c04c43dda3b0234ddc36a910b947" kindref="member">getProtocol</ref>());</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oppstring2string(pp-&gt;<ref refid="class_arp_table_entry_1ae9c88488bdcd3409b5a048db053bec68" kindref="member">getIpAddress</ref>());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oppstring2string(pp-&gt;<ref refid="class_arp_table_entry_1a53fd47b0ac0efe30d7c1965ce2808d9d" kindref="member">getMacAddress</ref>());</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oppstring2string(pp-&gt;<ref refid="class_arp_table_entry_1a9a04233d547cef4358aa375a617c01dc" kindref="member">getAge</ref>());</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>long2string(pp-&gt;<ref refid="class_arp_table_entry_1a90bdde86b373d5fafb2d2d74525263ed" kindref="member">getType</ref>());</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>oppstring2string(pp-&gt;<ref refid="class_arp_table_entry_1a350939d3434dc7dd403114febba08e20" kindref="member">getInterface</ref>());</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="class_arp_table_entry_descriptor_1a5fb72498fa0d12ad371365673930c293" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_arp_table_entry_descriptor_1a5fb72498fa0d12ad371365673930c293" kindref="member">ArpTableEntryDescriptor::setFieldValueAsString</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="528"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;setFieldValueAsString(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,field,i,value);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*pp<sp/>=<sp/>(<ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*)</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">;<sp/>(void)pp;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)<sp/>{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:<sp/>pp-&gt;<ref refid="class_arp_table_entry_1aba9fc2ed91e62fb9af640ba3d2e9ffc8" kindref="member">setIdentity</ref>(string2long(value));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/>pp-&gt;<ref refid="class_arp_table_entry_1a87672c8282d9fa822567fd08a361130c" kindref="member">setProtocol</ref>((value));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>pp-&gt;<ref refid="class_arp_table_entry_1aa5e5949d12f291be1bc74cf1bcde92bd" kindref="member">setIpAddress</ref>((value));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/>pp-&gt;<ref refid="class_arp_table_entry_1a144783c14f0992037f93b00d34b3521b" kindref="member">setMacAddress</ref>((value));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>pp-&gt;<ref refid="class_arp_table_entry_1a03e0a5373f20dc6672e8ae21680d4111" kindref="member">setAge</ref>((value));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:<sp/>pp-&gt;<ref refid="class_arp_table_entry_1ad4a908fc048e173535c155886fe96283" kindref="member">setType</ref>(string2long(value));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:<sp/>pp-&gt;<ref refid="class_arp_table_entry_1a87466843f83577d378f7c20e062f97da" kindref="member">setInterface</ref>((value));<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="class_arp_table_entry_descriptor_1a5d3f171a8f5868a8f93dfa57266fd9d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1a5d3f171a8f5868a8f93dfa57266fd9d5" kindref="member">ArpTableEntryDescriptor::getFieldStructName</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="549"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldStructName(field);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="class_arp_table_entry_descriptor_1afee450d3728d5dd41849cd656546af22" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_arp_table_entry_descriptor_1afee450d3728d5dd41849cd656546af22" kindref="member">ArpTableEntryDescriptor::getFieldStructValuePointer</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>field,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="562"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>omnetpp::cClassDescriptor<sp/>*basedesc<sp/>=<sp/>getBaseClassDescriptor();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(basedesc)<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>&lt;<sp/>basedesc-&gt;<ref refid="class_arp_table_entry_descriptor_1a770087d5cec9f0f7d40c163f7e1c7ce2" kindref="member">getFieldCount</ref>())</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>basedesc-&gt;getFieldStructValuePointer(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>field,<sp/>i);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field<sp/>-=<sp/>basedesc-&gt;getFieldCount();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*pp<sp/>=<sp/>(<ref refid="class_arp_table_entry" kindref="compound">ArpTableEntry</ref><sp/>*)</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">;<sp/>(void)pp;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(field)<sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="ArpTableEntry_m.cc"/>
  </compounddef>
</doxygen>
